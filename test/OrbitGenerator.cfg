CONTRACT_TYPE
{
    // Unique name of the contract (required)
    name = OrbitGenerator

    // Contract text
    title = OrbitGenerator
    description = A more detailed description of the contract.  This is where you come in.
    synopsis = We want you to do a thing.
    completedMessage = You have done the thing.

    // Target Celestial body - controls where the contract must be completed, has some automated
    // effects on numeric parameters (increasing science, etc.)
    targetBody = Kerbin

    // Contract rewards
    rewardFunds = 1000000.0
    rewardScience = 100.0

    maxSimultaneous = 1

    // The RecoverKerbal parameter is met when the named Kerbal is "recovered" (ie. goes back
    // in to the available list at the astronaut complex).  This is from the Squad "rescue"
    // contracts.
    PARAMETER
    {
        name = RecoverKerbal1
        type = RecoverKerbal

        // The Kerbal to be recovered
        kerbal = Jebediah Kerman

        // Text to use for the parameter
        // Default = <kerbal>: Recovered
        //title = 
    }

    BEHAVIOUR
    {
        name = OrbitGenerator
        type = OrbitGenerator

        // Use this to generate an orbit with specific parameters
        FIXED_ORBIT
        {
            // Body for the orbit - defaulted from the contract if not supplied
            targetBody = Kerbin

            // Actual orbit details. Note that REF represents the reference
            // body - but will be overriden by the targetBody.
            ORBIT
            {
                SMA = 1449999.99996286
                ECC = 1.07570816555399E-05
                INC = 0
                LPE = 270.690311604893
                LAN = 1.93635924563296
                MNA = 1.55872660382504
                EPH = 31.3999999999994
                REF = 1
            }
        }

        // Use this to generate an orbit with some randomization
        RANDOM_ORBIT
        {
            // Body for the orbit - defaulted from the contract if not supplied
            targetBody = Kerbin

            // Type of orbit to generate.  Valid values are from
            // FinePrint.Utilities.OrbitType:
            //    EQUATORIAL
            //    KOLNIYA
            //    POLAR
            //    RANDOM
            //    STATIONARY
            //    SYNCHRONOUS
            //    TUNDRA
            type = KOLNIYA

            // Difficulty multiplier - generally makes the orbits harder to
            // reach if you increase it.
            // Default = 1.0
            difficulty = 10.0
        }

        // Use this to generate an orbit with some randomization
        RANDOM_ORBIT
        {
            // Body for the orbit - defaulted from the contract if not supplied
            targetBody = Kerbin

            // Type of orbit to generate.  Valid values are from
            // FinePrint.Utilities.OrbitType:
            //    EQUATORIAL
            //    KOLNIYA
            //    POLAR
            //    RANDOM
            //    STATIONARY
            //    SYNCHRONOUS
            //    TUNDRA
            type = POLAR
        }

        // Use this to generate an orbit with some randomization
        RANDOM_ORBIT
        {
            // Body for the orbit - defaulted from the contract if not supplied
            targetBody = Kerbin

            // Type of orbit to generate.  Valid values are from
            // FinePrint.Utilities.OrbitType:
            //    EQUATORIAL
            //    KOLNIYA
            //    POLAR
            //    RANDOM
            //    STATIONARY
            //    SYNCHRONOUS
            //    TUNDRA
            type = TUNDRA
        }
    }
}
