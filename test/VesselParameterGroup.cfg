// This contract shows all the different parameters that can be used.
CONTRACT_TYPE
{
    // Unique name of the contract (required)
    name = VesselParameterGroupTest

    // Contract text
    title = Vessel Parameter Group Test Contract
    description = A more detailed description of the contract.  This is where you come in.
    synopsis = We want you to do a thing.
    completedMessage = You have done the thing.

    // Controls for whether a contract can be declined or cancelled, default is true for both
    cancellable = false
    declinable = true

    // Target Celestial body - controls where the contract must be completed, has some automated
    // effects on numeric parameters (increasing science, etc.)
    targetBody = Kerbin

    // Contract rewards
    rewardScience = 100.0
    rewardFunds = 100000.0

    // The Duration parameter is similar to the All parameter, with the extra requirement that the
    // player must keep the child parameters satisfied for the specified duration.  Use it with
    // disableOnStateChange = false for the child parameters
    PARAMETER
    {
        name = VesselParameterGroup1
        type = VesselParameterGroup

        // The text to display.
        // Default - Do the following for <duration>
        //title = 

        // The duration that the conditions must be satisfied for.  Can specify values in
        // years (y), days (d), hours (h), minutes (m), seconds (s) or any combination of those.
        duration = 10d 2h

        // Child parameters look just like a regular parameter (and can be infinitely nested)
        PARAMETER
        {
            name = ReachSituation1
            type = ReachSituation

            disableOnStateChange = false

            situation = ORBITING
        }

        PARAMETER
        {
            name = ReachDestination1
            type = ReachDestination

            disableOnStateChange = false

            targetBody = Kerbin
        }

        PARAMETER
        {
            name = HasCrew1
            type = HasCrew

            disableOnStateChange = false
        }
    }
}
