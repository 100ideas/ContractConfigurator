// This contract shows all the different parameters that can be used.
CONTRACT_TYPE
{
    // Unique name of the contract (required)
    name = VesselParameterGroupTest

    // Contract text
    title = Vessel Parameter Group Test Contract
    description = A more detailed description of the contract.  This is where you come in.
    synopsis = We want you to do a thing.
    completedMessage = You have done the thing.

    // Controls for whether a contract can be declined or cancelled, default is true for both
    cancellable = false
    declinable = true

    // Target Celestial body - controls where the contract must be completed, has some automated
    // effects on numeric parameters (increasing science, etc.)
    targetBody = Kerbin

    // Contract rewards
    rewardScience = 100.0
    rewardFunds = 100000.0

    PARAMETER
    {
        name = VesselParameterGroup1
        type = VesselParameterGroup

        // The text to display.
        // Default - Do the following for <duration>
        //title = 

        // The duration that the conditions must be satisfied for.  Can specify values in
        // years (y), days (d), hours (h), minutes (m), seconds (s) or any combination of those.
        duration = 10d 2h

        // Child parameters look just like a regular parameter (and can be infinitely nested)
        PARAMETER
        {
            name = ReachSituation1
            type = ReachSituation

            disableOnStateChange = false

            situation = ORBITING
        }

        PARAMETER
        {
            name = ReachDestination1
            type = ReachDestination

            disableOnStateChange = false

            targetBody = Kerbin
        }

        PARAMETER
        {
            name = HasCrew1
            type = HasCrew

            // (Optional) The type of trait required.  Valid values are:
            //    Pilot
            //    Engineer
            //    Scientist
            trait = Pilot

            // (Optional) Minimum and maximum experience level.  Default values are
            // 0 and 5 (for min/max).
            minExperience = 1
            maxExperience = 2

            // (Optional) Minimum and maximum count.  Default values are 1 and
            // int.MaxValue (for min/max).
            minCount = 1
            maxCount = 1

            disableOnStateChange = false
        }

        PARAMETER
        {
            name = HasPart1
            type = HasPart

            part = mk1pod
        }

        PARAMETER
        {
            name = HasPart1
            type = HasPart

            part = parachuteSingle
            minCount = 0
            maxCount = 0
        }

        PARAMETER
        {
            name = HasPartModule1
            type = HasPartModule

            partModule = ModuleReactionWheel
        }

        PARAMETER
        {
            name = HasResource1
            type = HasResource

            resource = LiquidFuel
            minQuantity = 100.0
        }
    }

    PARAMETER
    {
        name = OriginAndDestination
        type = VesselParameterGroup

        PARAMETER
        {
            name = Origin
            type = All
            disableOnStateChange = false

            PARAMETER
            {
                name = DestSit
                type = ReachSituation
                situation = PRELAUNCH
            }

            PARAMETER
            {
                name = DestBiome
                type = ReachBiome
                biome = Shores
            }
        }

        PARAMETER
        {
            name = Destination
            type = All
            disableOnStateChange = false

            PARAMETER
            {
                name = DestSit
                type = ReachSituation
                situation = FLYING
                disableOnStateChange = false
            }

            PARAMETER
            {
                name = DestBiome
                type = ReachBiome
                biome = Water
                disableOnStateChange = false
            }
        }
    }
}
