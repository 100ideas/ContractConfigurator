CONTRACT_TYPE
{
    name = CollectScience

    // Contract text
    title = CollectScience test
    description = A more detailed description of the contract.  This is where you come in.
    synopsis = We want you to do a thing.
    completedMessage = You have done the thing.

    maxSimultaneous = 1

    targetBody = Kerbin

    // Contract rewards
    rewardScience = 100.0
    rewardFunds = 100000.0

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        PARAMETER
        {
            name = CollectScience
            type = CollectScience

            biome = LaunchPad
            situation = SrfLanded

            // Valid values for stock KSP are:
            //    asteroidSample
            //    crewReport
            //    evaReport
            //    mysteryGoo
            //    surfaceSample
            //    mobileMaterialsLab
            //    temperatureScan
            //    barometerScan
            //    seismicScan
            //    gravityScan
            //    atmosphereAnalysis
            experiment = crewReport
        }

        PARAMETER
        {
            name = CollectScience
            type = CollectScience

            location = Space
            recoveryMethod = Transmit
        }

        PARAMETER
        {
            name = CollectScience
            type = CollectScience

            location = Surface
            recoveryMethod = Recover
        }
    }
}


CONTRACT_TYPE
{
    name = CollectScienceRandom

    // Contract text
    title = CollectScience - Random subject
    description = Get some science.
    synopsis = We want you to do a thing.
    completedMessage = You have done the thing.

    maxSimultaneous = 1

    targetBody = @scienceSubject.CelestialBody()

    // Contract rewards
    rewardScience = 1.0

    DATA
    {
        type = ScienceSubject
        scienceSubject = AllScienceSubjects().Random()
    }

    PARAMETER
    {
        name = CollectScience
        type = CollectScience

        biome = @/scienceSubject.Biome()
        situation = @/scienceSubject.Situation()
        experiment = @/scienceSubject.Experiment()
    }
}


CONTRACT_TYPE
{
    name = CollectScience20Kerbin

    // Contract text
    title = CollectScience - At least 20 from Kerbin
    description = Get some science.
    synopsis = We want you to do a thing.
    completedMessage = You have done the thing.

    maxSimultaneous = 1

    targetBody = Kerbin

    // Contract rewards
    rewardScience = 1.0

    DATA
    {
        type = ScienceSubject
        scienceSubject = AllScienceSubjectsByBody([@targetBody]).Where(ss => ss.RemainingScience() >= 20).Random()
    }

    PARAMETER
    {
        name = CollectScience
        type = CollectScience

        biome = @/scienceSubject.Biome()
        situation = @/scienceSubject.Situation()
        experiment = @/scienceSubject.Experiment()
    }
}


CONTRACT_TYPE
{
    name = CollectScienceNoBiome

    // Contract text
    title = CollectScience - No Biome
    description = Get some science.
    synopsis = We want you to do a thing.
    completedMessage = You have done the thing.

    maxSimultaneous = 1

    targetBody = @scienceSubject.CelestialBody()

    // Contract rewards
    rewardScience = 1.0

    DATA
    {
        type = ScienceSubject
        scienceSubject = AllScienceSubjectsByBody(OrbitedBodies()).Where(ss => ss.Biome() == null).Random()
    }

    PARAMETER
    {
        name = CollectScience
        type = CollectScience

        biome = @/scienceSubject.Biome()
        situation = @/scienceSubject.Situation()
        experiment = @/scienceSubject.Experiment()
    }
}


CONTRACT_TYPE
{
    name = CollectScience3Random

    // Contract text
    title = CollectScience - 3 Things
    description = Get some science.
    synopsis = We want you to do a thing.
    completedMessage = You have done the thing.

    maxSimultaneous = 1

    targetBody = OrbitedBodies().Random()

    // Contract rewards
    rewardScience = 1.0

    DATA
    {
        type = List<ScienceSubject>
        scienceSubjects = AllScienceSubjectsByBody([@targetBody]).Where(ss => ss.RemainingScience() >= 1.0).Random(3)
    }

    DATA
    {
        type = ScienceSubject
        scienceSubject0 = @scienceSubjects.ElementAt(0)
        scienceSubject1 = @scienceSubjects.ElementAt(1)
        scienceSubject2 = @scienceSubjects.ElementAt(2)
    }

    PARAMETER
    {
        name = CollectScience
        type = CollectScience

        biome = @/scienceSubject0.Biome()
        situation = @/scienceSubject0.Situation()
        experiment = @/scienceSubject0.Experiment()
    }

    PARAMETER
    {
        name = CollectScience
        type = CollectScience

        biome = @/scienceSubject1.Biome()
        situation = @/scienceSubject1.Situation()
        experiment = @/scienceSubject1.Experiment()
    }

    PARAMETER
    {
        name = CollectScience
        type = CollectScience

        biome = @/scienceSubject2.Biome()
        situation = @/scienceSubject2.Situation()
        experiment = @/scienceSubject2.Experiment()
    }
}
